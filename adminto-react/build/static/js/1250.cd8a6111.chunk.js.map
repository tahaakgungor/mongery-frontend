{"version":3,"file":"static/js/1250.cd8a6111.chunk.js","mappings":"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","sources":["pages/uikit/Modals/ModalSizes.tsx","pages/uikit/Modals/ModalWithPages.tsx","pages/uikit/Modals/ModalPositions.tsx","pages/uikit/Modals/ModalWithAlerts.tsx","pages/uikit/Modals/MultipleModal.tsx","pages/uikit/Modals/ToggleBetwenModals.tsx","pages/uikit/Modals/StaticBackDropModal.tsx","pages/uikit/Modals/CustomModals.tsx","pages/uikit/Modals/index.tsx","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js"],"sourcesContent":["import { useState } from 'react';\nimport { Button, Card, Modal } from 'react-bootstrap';\n\nconst ModalSizes = () => {\n    const [standard, setStandard] = useState<boolean>(false);\n    const [modal, setModal] = useState<boolean>(false);\n    const [size, setSize] = useState<'sm' | 'lg' | 'xl'>();\n    const [className, setClassName] = useState<string>('');\n    const [scroll, setScroll] = useState<boolean>(false);\n\n    // Show/hide the modal\n    const toggleStandard = () => {\n        setStandard(!standard);\n    };\n\n    // Show/hide the modal\n    const toggle = () => {\n        setModal(!modal);\n    };\n\n    // Opens large modal\n    const openModalWithSize = (size: 'sm' | 'lg' | 'xl') => {\n        setSize(size);\n        setClassName('');\n        setScroll(false);\n        toggle();\n    };\n\n    // Opens modal with custom class\n    const openModalWithClass = (className: string) => {\n        setClassName(className);\n        setScroll(false);\n        toggle();\n    };\n\n    // Opens large modal\n    const openModalWithScroll = () => {\n        setScroll(true);\n        setSize('sm');\n        setClassName('');\n        toggle();\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Bootstrap Modals</h4>\n                <p className=\"sub-header\">A rendered modal with header, body, and set of actions in the footer.</p>\n\n                <div className=\"button-list\">\n                    <Button onClick={toggleStandard}>Standard Modal</Button>\n                    <Button variant=\"info\" onClick={() => openModalWithSize('lg')}>\n                        Large Modal\n                    </Button>\n                    <Button variant=\"success\" onClick={() => openModalWithSize('sm')}>\n                        Small Modal\n                    </Button>\n                    <Button onClick={() => openModalWithClass('modal-full-width')}>Full width Modal</Button>\n                    <Button variant=\"secondary\" onClick={openModalWithScroll}>\n                        Scrollable Modal\n                    </Button>\n                </div>\n\n                {/* standard modal */}\n                <Modal show={standard} onHide={toggleStandard}>\n                    <Modal.Header onHide={toggleStandard} closeButton>\n                        <h4 className=\"modal-title\">Modal Heading</h4>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <h6>Text in a modal</h6>\n                        <p>Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>\n                        <hr />\n                        <h6>Overflowing text to show scroll behavior</h6>\n                        <p>\n                            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in,\n                            egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                        </p>\n                        <p>\n                            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus\n                            vel augue laoreet rutrum faucibus dolor auctor.\n                        </p>\n                        <p>\n                            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n                            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n                            auctor fringilla.\n                        </p>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"light\" onClick={toggleStandard}>\n                            Close\n                        </Button>{' '}\n                        <Button onClick={toggleStandard}>Save changes</Button>\n                    </Modal.Footer>\n                </Modal>\n\n                <Modal show={modal} onHide={toggle} dialogClassName={className} size={size} scrollable={scroll}>\n                    <Modal.Header onHide={toggle} closeButton>\n                        <h4 className=\"modal-title\">Modal Heading</h4>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <h6>Text in a modal</h6>\n                        <p>Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>\n                        <hr />\n                        <h6>Overflowing text to show scroll behavior</h6>\n                        <p>\n                            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in,\n                            egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\n                        </p>\n                        <p>\n                            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus\n                            vel augue laoreet rutrum faucibus dolor auctor.\n                        </p>\n                        <p>\n                            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\n                            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\n                            auctor fringilla.\n                        </p>\n                        {scroll && (\n                            <>\n                                <p>\n                                    Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\n                                    facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac,\n                                    vestibulum at eros.\n                                </p>\n                                <p>\n                                    Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\n                                    lacus vel augue laoreet rutrum faucibus dolor auctor.\n                                </p>\n                            </>\n                        )}\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"light\" onClick={toggle}>\n                            Close\n                        </Button>{' '}\n                        <Button onClick={toggle}>Save changes</Button>\n                    </Modal.Footer>\n                </Modal>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ModalSizes;\n","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Card, Modal } from 'react-bootstrap';\n\n// images\nimport logodark from '../../../assets/images/logo-dark.png';\nimport logolight from '../../../assets/images/logo-light.png';\n\nconst ModalsWithPages = () => {\n    const [signUpModal, setSignUpModal] = useState<boolean>(false);\n    const [signInModal, setSignInModal] = useState<boolean>(false);\n\n    // Show/hide the modal\n    const toggleSignUp = () => {\n        setSignUpModal(!signUpModal);\n    };\n\n    const toggleSignIn = () => {\n        setSignInModal(!signInModal);\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Modal with Pages</h4>\n\n                <p className=\"sub-header\">Examples of custom modals.</p>\n\n                <div className=\"button-list\">\n                    <Button onClick={toggleSignUp}>Sign Up Modal</Button>\n\n                    <Button variant=\"info\" onClick={toggleSignIn}>\n                        Log In Modal\n                    </Button>\n                </div>\n\n                {/* Sign up Modal */}\n                <Modal show={signUpModal} onHide={toggleSignUp}>\n                    <Modal.Body>\n                        <div className=\"text-center mt-2 mb-4\">\n                            <div className=\"auth-logo\">\n                                <Link to=\"/\" className=\"logo logo-dark\">\n                                    <span className=\"logo-lg\">\n                                        <img src={logodark} alt=\"\" height=\"24\" />\n                                    </span>\n                                </Link>\n\n                                <Link to=\"/\" className=\"logo logo-light\">\n                                    <span className=\"logo-lg\">\n                                        <img src={logolight} alt=\"\" height=\"24\" />\n                                    </span>\n                                </Link>\n                            </div>\n                        </div>\n                        <form className=\"ps-3 pe-3\">\n                            <div className=\"mb-3\">\n                                <label htmlFor=\"username\" className=\"form-label\">\n                                    Name\n                                </label>\n                                <input\n                                    className=\"form-control\"\n                                    type=\"email\"\n                                    id=\"username\"\n                                    required\n                                    placeholder=\"Michael Zenaty\"\n                                />\n                            </div>\n\n                            <div className=\"mb-3\">\n                                <label htmlFor=\"emailaddress\" className=\"form-label\">\n                                    Email address\n                                </label>\n                                <input\n                                    className=\"form-control\"\n                                    type=\"email\"\n                                    id=\"emailaddress\"\n                                    required\n                                    placeholder=\"john@deo.com\"\n                                />\n                            </div>\n\n                            <div className=\"mb-3\">\n                                <label htmlFor=\"password\" className=\"form-label\">\n                                    Password\n                                </label>\n                                <input\n                                    className=\"form-control\"\n                                    type=\"password\"\n                                    required\n                                    id=\"password\"\n                                    placeholder=\"Enter your password\"\n                                />\n                            </div>\n\n                            <div className=\"mb-3\">\n                                <div className=\"form-check\">\n                                    <input type=\"checkbox\" className=\"form-check-input\" id=\"customCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"customCheck1\">\n                                        I accept <Link to=\"#\">Terms and Conditions</Link>\n                                    </label>\n                                </div>\n                            </div>\n\n                            <div className=\"mb-3 text-center\">\n                                <button className=\"btn btn-primary\" type=\"submit\">\n                                    Sign Up Free\n                                </button>\n                            </div>\n                        </form>\n                    </Modal.Body>\n                </Modal>\n\n                {/* Sign in Modal */}\n                <Modal show={signInModal} onHide={toggleSignIn}>\n                    <Modal.Body>\n                        <div className=\"text-center mt-2 mb-4\">\n                            <div className=\"auth-logo\">\n                                <Link to=\"/\" className=\"logo logo-dark\">\n                                    <span className=\"logo-lg\">\n                                        <img src={logodark} alt=\"\" height=\"24\" />\n                                    </span>\n                                </Link>\n\n                                <Link to=\"/\" className=\"logo logo-light\">\n                                    <span className=\"logo-lg\">\n                                        <img src={logolight} alt=\"\" height=\"24\" />\n                                    </span>\n                                </Link>\n                            </div>\n                        </div>\n                        <form className=\"ps-3 pe-3\">\n                            <div className=\"mb-3\">\n                                <label htmlFor=\"emailaddress\" className=\"form-label\">\n                                    Email address\n                                </label>\n                                <input\n                                    className=\"form-control\"\n                                    type=\"email\"\n                                    id=\"emailaddress\"\n                                    required\n                                    placeholder=\"john@deo.com\"\n                                />\n                            </div>\n\n                            <div className=\"mb-3\">\n                                <label htmlFor=\"password\" className=\"form-label\">\n                                    Password\n                                </label>\n                                <input\n                                    className=\"form-control\"\n                                    type=\"password\"\n                                    required\n                                    id=\"password\"\n                                    placeholder=\"Enter your password\"\n                                />\n                            </div>\n\n                            <div className=\"mb-3\">\n                                <div className=\"form-check\">\n                                    <input type=\"checkbox\" className=\"form-check-input\" id=\"customCheck1\" />\n                                    <label className=\"form-check-label\" htmlFor=\"customCheck1\">\n                                        Remember me\n                                    </label>\n                                </div>\n                            </div>\n\n                            <div className=\"mb-3 text-center\">\n                                <button className=\"btn rounded-pill btn-primary\" type=\"submit\">\n                                    Sign In\n                                </button>\n                            </div>\n                        </form>\n                    </Modal.Body>\n                </Modal>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ModalsWithPages;\n","import { useState } from 'react';\nimport { Button, Card, Modal } from 'react-bootstrap';\n\nconst ModalPositions = () => {\n    const [modal, setModal] = useState<boolean>(false);\n    const [className, setClassName] = useState<string>('');\n\n    // Show/hide the modal\n    const toggle = () => {\n        setModal(!modal);\n    };\n\n    // Opens modal with custom class\n    const openModalWithClass = (className: string) => {\n        setClassName(className);\n        toggle();\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Modal Position</h4>\n\n                <p className=\"sub-header\">\n                    Specify the position for the modal. You can display modal at top, bottom, center or right of page by\n                    specifying classes <code>modal-top</code>, <code>modal-bottom</code>,{' '}\n                    <code>modal-dialog-centered</code> and <code>modal-right</code>\n                    respectively.\n                </p>\n\n                <div className=\"button-list\">\n                    <Button variant=\"secondary\" onClick={() => openModalWithClass('modal-top')}>\n                        Top Modal\n                    </Button>\n                    <Button variant=\"secondary\" onClick={() => openModalWithClass('modal-bottom')}>\n                        Bottom Modal\n                    </Button>\n                    <Button variant=\"secondary\" onClick={() => openModalWithClass('modal-dialog-centered')}>\n                        Center Modal\n                    </Button>\n                    <Button variant=\"secondary\" onClick={() => openModalWithClass('modal-right')}>\n                        Rightbar Modal\n                    </Button>\n                </div>\n\n                <Modal show={modal} onHide={toggle} dialogClassName={className}>\n                    <Modal.Header onHide={toggle} closeButton>\n                        <h4 className=\"modal-title\">Modal Heading</h4>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <h5>Text in a modal</h5>\n                        <p>Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button onClick={toggle}>Save changes</Button>\n                    </Modal.Footer>\n                </Modal>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ModalPositions;\n","import { useState } from 'react';\nimport { Button, Card, Modal } from 'react-bootstrap';\nimport classNames from 'classnames';\n\nconst ModalWithAlerts = () => {\n    const [fillModal, setFillModal] = useState<boolean>(false);\n    const [modal, setModal] = useState<boolean>(false);\n\n    const [className, setClassName] = useState<string>('');\n\n    // Show/hide the modal\n    const fillToggle = () => {\n        setFillModal(!fillModal);\n    };\n\n    const toggle = () => {\n        setModal(!modal);\n    };\n\n    // Opens modal with custom fill class\n    const openModalWithFillClass = (className: string) => {\n        setClassName(className);\n        fillToggle();\n    };\n\n    // Opens modal with custom class\n    const openModalWithClass = (className: string) => {\n        setClassName(className);\n        toggle();\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Modal based Alerts</h4>\n\n                <p className=\"sub-header\">Show different contexual alert messages using modal component.</p>\n\n                <div className=\"button-list\">\n                    <Button variant=\"success\" className=\"me-1\" onClick={() => openModalWithFillClass('success')}>\n                        Success Alert\n                    </Button>\n                    <Button variant=\"info\" className=\"me-1\" onClick={() => openModalWithClass('info')}>\n                        Info Alert\n                    </Button>\n                    <Button variant=\"warning\" className=\"me-1\" onClick={() => openModalWithClass('warning')}>\n                        Warning Alert\n                    </Button>\n                    <Button variant=\"danger\" className=\"me-1\" onClick={() => openModalWithFillClass('danger')}>\n                        Danger Alert\n                    </Button>\n                </div>\n\n                <Modal show={fillModal} onHide={fillToggle} size=\"sm\">\n                    <div className={classNames('modal-filled', 'bg-' + className)}>\n                        <Modal.Body className=\"p-4\">\n                            <div className=\"text-center\">\n                                <i className=\"dripicons-checkmark h1 text-white\"></i>\n                                <h4 className=\"mt-2 text-white\">Well Done!</h4>\n                                <p className=\"mt-3 text-white\">\n                                    Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\n                                    facilisis in, egestas eget quam.\n                                </p>\n                                <Button onClick={fillToggle} className=\"btn-light my-2\">\n                                    Continue\n                                </Button>\n                            </div>\n                        </Modal.Body>\n                    </div>\n                </Modal>\n\n                <Modal show={modal} onHide={toggle} size=\"sm\">\n                    <div>\n                        <Modal.Body className=\"p-4\">\n                            <div className=\"text-center\">\n                                <i className={classNames('dripicons-information', 'h1', 'text-' + className)}></i>\n                                <h4 className=\"mt-2\">Heads up!</h4>\n                                <p className=\"mt-3\">\n                                    Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac\n                                    facilisis in, egestas eget quam.\n                                </p>\n                                <Button onClick={toggle} className={classNames('my-2', 'btn-' + className)}>\n                                    Continue\n                                </Button>\n                            </div>\n                        </Modal.Body>\n                    </div>\n                </Modal>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ModalWithAlerts;\n","import { useState } from 'react';\nimport { Button, Card, Modal } from 'react-bootstrap';\n\nconst MultipleModal = () => {\n    const [modal, setModal] = useState<boolean>(false);\n    const [nextModal, setNextModal] = useState<boolean>(false);\n\n    // Show/hide the modal\n    const toggle = () => {\n        setModal(!modal);\n    };\n\n    const toggleNextModal = () => {\n        toggle();\n        setNextModal(!nextModal);\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Multiple Modal</h4>\n\n                <p className=\"sub-header\">\n                    Display a series of modals one by one to guide your users on multiple aspects or take step wise\n                    input.\n                </p>\n\n                <div className=\"button-list\">\n                    <Button variant=\"secondary\" onClick={toggle}>\n                        Multiple Modal\n                    </Button>\n                </div>\n\n                <Modal show={modal} onHide={toggle}>\n                    <Modal.Header closeButton>\n                        <h4 className=\"modal-title\">Modal Heading</h4>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <h5>Text in a modal</h5>\n                        <p>Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button onClick={() => setNextModal(true)}>Next</Button>\n                    </Modal.Footer>\n                </Modal>\n\n                <Modal show={nextModal} onHide={toggleNextModal}>\n                    <Modal.Header closeButton>\n                        <h4 className=\"modal-title\">Modal Heading</h4>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <h5>Text in a modal</h5>\n                        <p>Duis mollis, est non commodo luctus, nisi erat porttitor ligula.</p>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button onClick={toggleNextModal}>Close</Button>\n                    </Modal.Footer>\n                </Modal>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default MultipleModal;\n","import { useState } from 'react';\nimport { Button, Card, Modal } from 'react-bootstrap';\n\nconst ToggleBetweenModals = () => {\n    const [modal, setModal] = useState<boolean>(false);\n    const [nextModal, setNextModal] = useState<boolean>(false);\n\n    // Show/hide the modal\n    const toggle = () => {\n        setModal(!modal);\n    };\n\n    const toggleNextModal = () => {\n        toggle();\n        setNextModal(!nextModal);\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Toggle Between Modals</h4>\n                <p className=\"sub-header\">\n                    Display a series of modals one by one to guide your users on multiple aspects or take step wise\n                    input.\n                </p>\n\n                <div className=\"button-list\">\n                    <Button variant=\"info\" onClick={toggle}>\n                        Open first modal\n                    </Button>\n                </div>\n\n                <Modal show={modal} onHide={toggle} centered>\n                    <Modal.Header closeButton>\n                        <h4 className=\"modal-title\">Modal Heading</h4>\n                    </Modal.Header>\n                    <Modal.Body>Show a second modal and hide this one with the button below.</Modal.Body>\n                    <Modal.Footer>\n                        <Button onClick={toggleNextModal}>Open second modal</Button>\n                    </Modal.Footer>\n                </Modal>\n\n                <Modal show={nextModal} onHide={toggleNextModal} centered>\n                    <Modal.Header closeButton>\n                        <h4 className=\"modal-title\">Modal Heading</h4>\n                    </Modal.Header>\n                    <Modal.Body>Hide this modal and show the first with the button below.</Modal.Body>\n                    <Modal.Footer>\n                        <Button onClick={toggleNextModal}>Back to first</Button>\n                    </Modal.Footer>\n                </Modal>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ToggleBetweenModals;\n","import { useState } from 'react';\nimport { Button, Card, Modal } from 'react-bootstrap';\n\nconst StaticBackdropModal = () => {\n    const [modal, setModal] = useState<boolean>(false);\n\n    // Show/hide the modal\n    const toggle = () => {\n        setModal(!modal);\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Static Backdrop</h4>\n\n                <p className=\"sub-header\">\n                    When backdrop is set to static, the modal will not close when clicking outside it. Click the button\n                    below to try it.\n                </p>\n\n                <div className=\"button-list\">\n                    <Button variant=\"info\" onClick={toggle}>\n                        Launch static backdrop modal\n                    </Button>\n                </div>\n\n                <Modal show={modal} onHide={toggle} backdrop=\"static\" keyboard={false}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Modal title</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid.\n                        3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt\n                        laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin\n                        coffee nulla assumenda shoreditch et.\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={toggle}>\n                            Close\n                        </Button>\n                        <Button variant=\"primary\">Understood</Button>\n                    </Modal.Footer>\n                </Modal>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default StaticBackdropModal;\n","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Accordion, Button, Card, Modal, useAccordionButton } from 'react-bootstrap';\n\nconst CustomToggle = ({ children, eventKey }: { children: any; eventKey: string }) => {\n    const decoratedOnClick = useAccordionButton(eventKey, () => {});\n\n    return (\n        <h5 className=\"m-0\">\n            <Link to=\"#\" className=\"text-dark\" onClick={decoratedOnClick}>\n                {children}\n            </Link>\n        </h5>\n    );\n};\n\nconst CustomModals = () => {\n    const [responsiveModal, setResponsiveModal] = useState<boolean>(false);\n    const [accordionModal, setAccordionModal] = useState<boolean>(false);\n\n    // Show/hide the modal\n    const toggleResponsiveModal = () => {\n        setResponsiveModal(!responsiveModal);\n    };\n\n    const toggleAccordionModal = () => {\n        setAccordionModal(!accordionModal);\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Custom Modals</h4>\n\n                <p className=\"sub-header\">Examples of custom modals.</p>\n\n                <div className=\"button-list\">\n                    <Button variant=\"success\" className=\"waves-effect waves-light\" onClick={toggleResponsiveModal}>\n                        Responsive Modal\n                    </Button>\n                    <Button variant=\"secondary\" className=\"waves-effect waves-light\" onClick={toggleAccordionModal}>\n                        Accordion in Modal\n                    </Button>\n                </div>\n\n                <Modal show={responsiveModal} onHide={toggleResponsiveModal}>\n                    <Modal.Header closeButton>\n                        <h4 className=\"modal-title\">Modal Content is Responsive</h4>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <div className=\"mb-3\">\n                                    <label htmlFor=\"field-1\" className=\"form-label\">\n                                        Name\n                                    </label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"field-1\"\n                                        placeholder=\"John\"\n                                        required\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <div className=\"mb-3\">\n                                    <label htmlFor=\"field-2\" className=\"form-label\">\n                                        Surname\n                                    </label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"field-2\"\n                                        placeholder=\"Doe\"\n                                        required\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"mb-3\">\n                                    <label htmlFor=\"field-3\" className=\"form-label\">\n                                        Address\n                                    </label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"field-3\"\n                                        placeholder=\"Address\"\n                                        required\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <div className=\"mb-3\">\n                                    <label htmlFor=\"field-4\" className=\"form-label\">\n                                        City\n                                    </label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"field-4\"\n                                        placeholder=\"Boston\"\n                                        required\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <div className=\"mb-3\">\n                                    <label htmlFor=\"field-5\" className=\"form-label\">\n                                        Country\n                                    </label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"field-5\"\n                                        placeholder=\"United States\"\n                                        required\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"col-md-4\">\n                                <div className=\"mb-3\">\n                                    <label htmlFor=\"field-6\" className=\"form-label\">\n                                        Zip\n                                    </label>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control\"\n                                        id=\"field-6\"\n                                        placeholder=\"123456\"\n                                        required\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <div className=\"\">\n                                    <label htmlFor=\"field-7\" className=\"form-label\">\n                                        Personal Info\n                                    </label>\n                                    <textarea\n                                        className=\"form-control\"\n                                        id=\"field-7\"\n                                        placeholder=\"Write something about yourself\"\n                                        required\n                                    ></textarea>\n                                </div>\n                            </div>\n                        </div>\n                    </Modal.Body>\n\n                    <Modal.Footer>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-secondary waves-effect\"\n                            onClick={toggleResponsiveModal}\n                        >\n                            Close\n                        </button>\n                        <button type=\"submit\" className=\"btn btn-info waves-effect waves-light\">\n                            Save changes\n                        </button>\n                    </Modal.Footer>\n                </Modal>\n\n                <Modal show={accordionModal} onHide={toggleAccordionModal}>\n                    <Accordion defaultActiveKey=\"0\">\n                        <Card className=\"mb-0\">\n                            <Card.Header>\n                                <CustomToggle eventKey=\"0\">Collapsible Group Item #1</CustomToggle>\n                            </Card.Header>\n                            <Accordion.Collapse eventKey=\"0\">\n                                <Card.Body>\n                                    Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry\n                                    richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor\n                                    brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt\n                                    aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et.\n                                    Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente\n                                    ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer\n                                    farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them\n                                    accusamus labore sustainable VHS.\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n                        <Card className=\"mb-0\">\n                            <Card.Header>\n                                <CustomToggle eventKey=\"1\">Collapsible Group Item #2</CustomToggle>\n                            </Card.Header>\n                            <Accordion.Collapse eventKey=\"1\">\n                                <Card.Body>\n                                    Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry\n                                    richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor\n                                    brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt\n                                    aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et.\n                                    Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente\n                                    ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer\n                                    farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them\n                                    accusamus labore sustainable VHS.\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n                        <Card className=\"mb-0\">\n                            <Card.Header>\n                                <CustomToggle eventKey=\"2\">Collapsible Group Item #3</CustomToggle>\n                            </Card.Header>\n                            <Accordion.Collapse eventKey=\"2\">\n                                <Card.Body>\n                                    Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry\n                                    richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor\n                                    brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt\n                                    aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et.\n                                    Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente\n                                    ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer\n                                    farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them\n                                    accusamus labore sustainable VHS.\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n                    </Accordion>\n                </Modal>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default CustomModals;\n","import { Col, Row } from 'react-bootstrap';\n\n// hooks\nimport { usePageTitle } from '../../../hooks';\n\n// components\nimport ModalSizes from './ModalSizes';\nimport ModalsWithPages from './ModalWithPages';\nimport ModalPositions from './ModalPositions';\nimport ModalWithAlerts from './ModalWithAlerts';\nimport MultipleModal from './MultipleModal';\nimport ToggleBetweenModals from './ToggleBetwenModals';\nimport StaticBackdropModal from './StaticBackDropModal';\nimport CustomModals from './CustomModals';\n\nconst Modals = () => {\n    // set pagetitle\n    usePageTitle({\n        title: 'Modals',\n        breadCrumbItems: [\n            {\n                path: '/base-ui/modals',\n                label: 'Base UI',\n            },\n            {\n                path: '/base-ui/modals',\n                label: 'Modals',\n                active: true,\n            },\n        ],\n    });\n\n    return (\n        <>\n            <Row>\n                <Col md={6}>\n                    <ModalSizes />\n                </Col>\n                <Col md={6}>\n                    <ModalsWithPages />\n                </Col>\n            </Row>\n            <Row>\n                <Col md={6}>\n                    <ModalPositions />\n                </Col>\n                <Col md={6}>\n                    <ModalWithAlerts />\n                </Col>\n            </Row>\n            <Row>\n                <Col md={6}>\n                    <MultipleModal />\n                </Col>\n                <Col md={6}>\n                    <ToggleBetweenModals />\n                </Col>\n            </Row>\n            <Row>\n                <Col md={6}>\n                    <StaticBackdropModal />\n                </Col>\n                <Col md={6}>\n                    <CustomModals />\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default Modals;\n","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\n\nexport default function useWindow() {\n  return useContext(Context);\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      node.style.display = 'block';\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // Sets `display` always block when `animation` is false\n\n  if (!animation) {\n    baseModalStyle.display = 'block';\n  }\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-labelledby\": ariaLabelledby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}"],"names":["useState","standard","setStandard","modal","setModal","size","setSize","className","setClassName","scroll","setScroll","toggleStandard","toggle","openModalWithSize","Card","Button","onClick","variant","openModalWithClass","Modal","show","onHide","closeButton","dialogClassName","scrollable","signUpModal","setSignUpModal","signInModal","setSignInModal","toggleSignUp","toggleSignIn","to","src","logodark","alt","height","logolight","htmlFor","type","id","required","placeholder","fillModal","setFillModal","fillToggle","openModalWithFillClass","classNames","nextModal","setNextModal","toggleNextModal","centered","backdrop","keyboard","CustomToggle","children","eventKey","decoratedOnClick","useAccordionButton","responsiveModal","setResponsiveModal","accordionModal","setAccordionModal","toggleResponsiveModal","toggleAccordionModal","Accordion","defaultActiveKey","usePageTitle","title","breadCrumbItems","path","label","active","Row","Col","md","dataAttr","property","dataProp","Context","createContext","canUseDOM","window","undefined","Provider","useWindow","useContext","contains","context","node","compareDocumentPosition","toArray","Function","prototype","bind","call","slice","qsa","element","selector","querySelectorAll","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","scrollbarSize","recalc","scrollDiv","document","createElement","style","position","top","width","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","createWithBsPrefix","ModalDialog","React","ref","bsPrefix","contentClassName","fullscreen","useBootstrapPrefix","dialogClass","fullScreenClass","_jsx","displayName","ModalHeader","AbstractModalHeader","defaultProps","closeLabel","DivStyledAsH4","divWithClassName","Component","autoFocus","enforceFocus","restoreFocus","animation","dialogAs","DialogTransition","Fade","timeout","BackdropTransition","Dialog","ariaLabelledby","onEscapeKeyDown","onShow","container","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","propsManager","manager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","useRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","useCallbackRef","setModalRef","mergedRef","useMergedRefs","handleHide","useEventCallback","isRTL","useIsRTL","modalContext","useMemo","getModalManager","getSharedManager","updateDialogStyle","containerIsOverflowing","getScrollbarWidth","modalIsOverflowing","scrollHeight","ownerDocument","documentElement","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","dialog","useWillUnmount","removeEventListener","current","handleDialogMouseDown","handleMouseUp","e","target","handleStaticModalAnimation","transitionEnd","handleClick","currentTarget","handleStaticBackdropClick","renderBackdrop","useCallback","backdropProps","baseModalStyle","display","ModalContext","value","BaseModal","preventDefault","isAppearing","addEventListener","transition","backdropTransition","renderDialog","dialogProps","role","onMouseUp","onMouseDown","Object","assign","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","_superPropBase","hasOwnProperty","getPrototypeOf","_get","Reflect","get","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","apply","this"],"sourceRoot":""}